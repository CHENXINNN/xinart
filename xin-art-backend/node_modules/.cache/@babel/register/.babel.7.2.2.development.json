{
  "{\"sourceRoot\":\"D:\\\\fontend\\\\xin-art-backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\fontend\\\\xin-art-backend\",\"filename\":\"D:\\\\fontend\\\\xin-art-backend\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\fontend\\\\xin-art-backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\fontend\\xin-art-backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\fontend\\xin-art-backend",
      "filename": "D:\\fontend\\xin-art-backend\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\fontend\\xin-art-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\fontend\\xin-art-backend\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\fontend\\xin-art-backend\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\fontend\\xin-art-backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = (0, _express.default)();\nvar dbUrl = \"mongodb://localhost\"; //解析application/json\n\napp.use(_bodyParser.default.json()); //解析 application/x-www-form-urlencoded\n\napp.use(_bodyParser.default.urlencoded({\n  extended: false\n}));\n\n_mongodb.default.MongoClient.connect(dbUrl, {\n  useNewUrlParser: true\n}, function (err, client) {\n  if (err) throw err;\n  console.log(\"Connected successfully to server\");\n  var db = client.db('xinart'); //api左边的右划线不要忘记！！！\n\n  app.post('/api/login', function (req, res) {\n    var _req$body = req.body,\n        username = _req$body.username,\n        password = _req$body.password;\n    db.collection('account').countDocuments({\n      username: username,\n      password: password\n    }, function (err, r) {\n      if (r === 1) {\n        res.send(\"ok\");\n      } else {\n        res.send(\"Your username or password is wrong\");\n      }\n    });\n  });\n  app.post('/api/addAlbum', function (req, res) {\n    var _req$body2 = req.body,\n        imgurl = _req$body2.imgurl,\n        song = _req$body2.song,\n        album = _req$body2.album,\n        singer = _req$body2.singer,\n        lyricist = _req$body2.lyricist,\n        composer = _req$body2.composer,\n        release = _req$body2.release;\n    db.collection('albumList').insertOne({\n      imgurl: imgurl,\n      song: song,\n      album: album,\n      singer: singer,\n      lyricist: lyricist,\n      composer: composer,\n      release: release\n    }, function (err, result) {\n      if (err) {\n        res.status(500).json({\n          errors: {\n            global: \"Something went wrong\"\n          }\n        });\n      } else {\n        res.send({\n          albumList: result.ops[0]\n        });\n      }\n    });\n  });\n  app.get('/api/deleteAlbum/:_id', function (req, res) {\n    var obj_id = new _mongodb.default.ObjectID(req.params._id);\n    db.collection('albumList').deleteOne({\n      \"_id\": obj_id\n    }, function (err, r) {\n      _assert.default.equal(null, err);\n\n      _assert.default.equal(1, r.deletedCount); //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\n\n\n      res.send({\n        deletedCount: r.deletedCount\n      });\n    });\n  });\n  app.get('/api/albumList', function (req, res) {\n    db.collection('albumList').find({}).toArray(function (err, albumList) {\n      res.json({\n        albumList: albumList\n      });\n    });\n  });\n  app.get('/api/articleList', function (req, res) {\n    db.collection('articleList').find({}).toArray(function (err, articleList) {\n      res.json({\n        articleList: articleList\n      });\n    });\n  });\n  app.get('/work/detail/:_id', function (req, res) {\n    // key _id 对应的 value 值比较特殊，他是一个对象而不是字符串\n    //所以这里我们需要新建一个对象\n    var obj_id = new _mongodb.default.ObjectID(req.params._id);\n    db.collection('articleList').find({\n      \"_id\": obj_id\n    }).toArray(function (err, articleList) {\n      res.json({\n        articleList: articleList\n      });\n    });\n  });\n  app.post('/api/addArticle', function (req, res) {\n    var _req$body3 = req.body,\n        time = _req$body3.time,\n        tag = _req$body3.tag,\n        title = _req$body3.title,\n        imgurl = _req$body3.imgurl,\n        desc = _req$body3.desc,\n        detail = _req$body3.detail;\n    db.collection('articleList').insertOne({\n      time: time,\n      tag: tag,\n      title: title,\n      imgurl: imgurl,\n      desc: desc,\n      detail: detail\n    }, function (err, result) {\n      if (err) {\n        res.status(500).json({\n          errors: {\n            global: \"Something went wrong\"\n          }\n        });\n      } else {\n        res.send({\n          articleList: result.ops[0]\n        });\n      }\n    });\n  });\n  app.get('/api/deleteArticle/:_id', function (req, res) {\n    var obj_id = new _mongodb.default.ObjectID(req.params._id);\n    db.collection('articleList').deleteOne({\n      \"_id\": obj_id\n    }, function (err, r) {\n      _assert.default.equal(null, err);\n\n      _assert.default.equal(1, r.deletedCount); //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\n\n\n      res.send({\n        deletedCount: r.deletedCount\n      });\n    });\n  });\n  app.get('/api/drawingList', function (req, res) {\n    db.collection('drawingList').find({}).toArray(function (err, drawingList) {\n      res.json({\n        drawingList: drawingList\n      });\n    });\n  });\n  app.post('/api/addDrawing', function (req, res) {\n    var _req$body4 = req.body,\n        imgurl = _req$body4.imgurl,\n        title = _req$body4.title,\n        desc = _req$body4.desc;\n    db.collection('drawingList').insertOne({\n      imgurl: imgurl,\n      title: title,\n      desc: desc\n    }, function (err, result) {\n      if (err) {\n        res.status(500).json({\n          errors: {\n            global: \"Something went wrong\"\n          }\n        });\n      } else {\n        res.send({\n          drawingList: result.ops[0]\n        });\n      }\n    });\n  });\n  app.get('/api/deleteDrawing/:_id', function (req, res) {\n    var obj_id = new _mongodb.default.ObjectID(req.params._id);\n    db.collection('drawingList').deleteOne({\n      \"_id\": obj_id\n    }, function (err, r) {\n      _assert.default.equal(null, err);\n\n      _assert.default.equal(1, r.deletedCount); //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\n\n\n      res.send({\n        deletedCount: r.deletedCount\n      });\n    });\n  });\n  app.get('/api/postList', function (req, res) {\n    db.collection('postList').find({}).toArray(function (err, postList) {\n      res.json({\n        postList: postList\n      });\n    });\n  });\n  app.post('/api/addPost', function (req, res) {\n    var _req$body5 = req.body,\n        post = _req$body5.post,\n        time = _req$body5.time;\n    db.collection('postList').insertOne({\n      post: post,\n      time: time\n    }, function (err, result) {\n      if (err) {\n        res.status(500).json({\n          errors: {\n            global: \"Something went wrong\"\n          }\n        });\n      } else {\n        res.send({\n          postList: result.ops[0]\n        });\n      }\n    });\n  });\n  app.get('/api/deletePost/:_id', function (req, res) {\n    var obj_id = new _mongodb.default.ObjectID(req.params._id);\n    db.collection('postList').deleteOne({\n      \"_id\": obj_id\n    }, function (err, r) {\n      _assert.default.equal(null, err);\n\n      _assert.default.equal(1, r.deletedCount); //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\n\n\n      res.send({\n        deletedCount: r.deletedCount\n      });\n    });\n  });\n  app.post('/api/addAboutMe', function (req, res) {\n    var aboutMe = req.body.aboutMe;\n    db.collection('aboutMeList').insertOne({\n      aboutMe: aboutMe\n    }, function (err, result) {\n      if (err) {\n        res.status(500).json({\n          errors: {\n            global: \"Something went wrong\"\n          }\n        });\n      } else {\n        res.send({\n          aboutMeList: result.ops[0]\n        });\n      }\n    });\n  });\n  app.get('/api/aboutMeList', function (req, res) {\n    db.collection('aboutMeList').find({}).toArray(function (err, aboutMeList) {\n      res.json({\n        aboutMeList: aboutMeList\n      });\n    });\n  });\n  app.get('/api/deleteAboutMe/:_id', function (req, res) {\n    var obj_id = new _mongodb.default.ObjectID(req.params._id);\n    db.collection('aboutMeList').deleteOne({\n      \"_id\": obj_id\n    }, function (err, r) {\n      _assert.default.equal(null, err);\n\n      _assert.default.equal(1, r.deletedCount); //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\n\n\n      res.send({\n        deletedCount: r.deletedCount\n      });\n    });\n  });\n  app.listen(8080, function () {\n    return console.log('Server is running on localhost:8080');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "dbUrl",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "mongodb",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "err",
        "client",
        "console",
        "log",
        "db",
        "post",
        "req",
        "res",
        "body",
        "username",
        "password",
        "collection",
        "countDocuments",
        "r",
        "send",
        "imgurl",
        "song",
        "album",
        "singer",
        "lyricist",
        "composer",
        "release",
        "insertOne",
        "result",
        "status",
        "errors",
        "global",
        "albumList",
        "ops",
        "get",
        "obj_id",
        "ObjectID",
        "params",
        "_id",
        "deleteOne",
        "assert",
        "equal",
        "deletedCount",
        "find",
        "toArray",
        "articleList",
        "time",
        "tag",
        "title",
        "desc",
        "detail",
        "drawingList",
        "postList",
        "aboutMe",
        "aboutMeList",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,uBAAZ;AACA,IAAMC,KAAK,GAAG,qBAAd,C,CAEA;;AACAD,GAAG,CAACE,GAAJ,CAAQC,oBAAWC,IAAX,EAAR,E,CAEA;;AACAJ,GAAG,CAACE,GAAJ,CAAQC,oBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;;AAGAC,iBAAQC,WAAR,CAAoBC,OAApB,CAA4BR,KAA5B,EAAkC;AAAES,EAAAA,eAAe,EAAE;AAAnB,CAAlC,EAA6D,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5E,MAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAU,QAAV,CAAX,CAH4E,CAK5E;;AACAf,EAAAA,GAAG,CAACgB,IAAJ,CAAS,YAAT,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,oBACND,GAAG,CAACE,IADE;AAAA,QAC5BC,QAD4B,aAC5BA,QAD4B;AAAA,QAClBC,QADkB,aAClBA,QADkB;AAEnCN,IAAAA,EAAE,CAACO,UAAH,CAAc,SAAd,EAAyBC,cAAzB,CAAwC;AAACH,MAAAA,QAAQ,EAARA,QAAD;AAAWC,MAAAA,QAAQ,EAARA;AAAX,KAAxC,EAA8D,UAACV,GAAD,EAAMa,CAAN,EAAY;AACxE,UAAIA,CAAC,KAAK,CAAV,EAAa;AACXN,QAAAA,GAAG,CAACO,IAAJ,CAAS,IAAT;AACD,OAFD,MAEM;AACJP,QAAAA,GAAG,CAACO,IAAJ,CAAS,oCAAT;AACD;AACF,KAND;AAOD,GATD;AAWAzB,EAAAA,GAAG,CAACgB,IAAJ,CAAS,eAAT,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,qBAC+BD,GAAG,CAACE,IADnC;AAAA,QAC9BO,MAD8B,cAC9BA,MAD8B;AAAA,QACtBC,IADsB,cACtBA,IADsB;AAAA,QAChBC,KADgB,cAChBA,KADgB;AAAA,QACTC,MADS,cACTA,MADS;AAAA,QACDC,QADC,cACDA,QADC;AAAA,QACSC,QADT,cACSA,QADT;AAAA,QACmBC,OADnB,cACmBA,OADnB;AAElCjB,IAAAA,EAAE,CAACO,UAAH,CAAc,WAAd,EAA2BW,SAA3B,CAAqC;AAAEP,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,IAAI,EAAJA,IAAV;AAAgBC,MAAAA,KAAK,EAALA,KAAhB;AAAuBC,MAAAA,MAAM,EAANA,MAAvB;AAA+BC,MAAAA,QAAQ,EAARA,QAA/B;AAAyCC,MAAAA,QAAQ,EAARA,QAAzC;AAAmDC,MAAAA,OAAO,EAAPA;AAAnD,KAArC,EAAmG,UAACrB,GAAD,EAAMuB,MAAN,EAAiB;AAClH,UAAIvB,GAAJ,EAAS;AACPO,QAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgB/B,IAAhB,CAAqB;AAAEgC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAAV,SAArB;AACD,OAFD,MAEO;AACLnB,QAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEa,UAAAA,SAAS,EAAEJ,MAAM,CAACK,GAAP,CAAW,CAAX;AAAb,SAAT;AACD;AACF,KAND;AAOL,GATD;AAWAvC,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,uBAAR,EAAiC,UAACvB,GAAD,EAAMC,GAAN,EAAc;AAC7C,QAAIuB,MAAM,GAAG,IAAIlC,iBAAQmC,QAAZ,CAAqBzB,GAAG,CAAC0B,MAAJ,CAAWC,GAAhC,CAAb;AACA7B,IAAAA,EAAE,CAACO,UAAH,CAAc,WAAd,EAA2BuB,SAA3B,CAAqC;AAAC,aAAOJ;AAAR,KAArC,EAAsD,UAAC9B,GAAD,EAAMa,CAAN,EAAY;AAChEsB,sBAAOC,KAAP,CAAa,IAAb,EAAmBpC,GAAnB;;AACAmC,sBAAOC,KAAP,CAAa,CAAb,EAAgBvB,CAAC,CAACwB,YAAlB,EAFgE,CAGhE;;;AACA9B,MAAAA,GAAG,CAACO,IAAJ,CAAS;AAACuB,QAAAA,YAAY,EAAExB,CAAC,CAACwB;AAAjB,OAAT;AACD,KALD;AAMD,GARD;AAUAhD,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,gBAAR,EAA0B,UAACvB,GAAD,EAAMC,GAAN,EAAc;AACtCH,IAAAA,EAAE,CAACO,UAAH,CAAc,WAAd,EAA2B2B,IAA3B,CAAgC,EAAhC,EAAoCC,OAApC,CAA4C,UAACvC,GAAD,EAAM2B,SAAN,EAAoB;AAC9DpB,MAAAA,GAAG,CAACd,IAAJ,CAAS;AAAEkC,QAAAA,SAAS,EAATA;AAAF,OAAT;AACD,KAFD;AAGD,GAJD;AAMAtC,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,kBAAR,EAA4B,UAACvB,GAAD,EAAMC,GAAN,EAAc;AACxCH,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6B2B,IAA7B,CAAkC,EAAlC,EAAsCC,OAAtC,CAA8C,UAACvC,GAAD,EAAMwC,WAAN,EAAsB;AAClEjC,MAAAA,GAAG,CAACd,IAAJ,CAAS;AAAE+C,QAAAA,WAAW,EAAXA;AAAF,OAAT;AACD,KAFD;AAGD,GAJD;AAMAnD,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,mBAAR,EAA6B,UAACvB,GAAD,EAAMC,GAAN,EAAc;AACzC;AACA;AACA,QAAIuB,MAAM,GAAG,IAAIlC,iBAAQmC,QAAZ,CAAqBzB,GAAG,CAAC0B,MAAJ,CAAWC,GAAhC,CAAb;AACA7B,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6B2B,IAA7B,CAAkC;AAAC,aAAOR;AAAR,KAAlC,EAAmDS,OAAnD,CAA2D,UAACvC,GAAD,EAAMwC,WAAN,EAAsB;AAC/EjC,MAAAA,GAAG,CAACd,IAAJ,CAAS;AAAE+C,QAAAA,WAAW,EAAXA;AAAF,OAAT;AACD,KAFD;AAGD,GAPD;AASAnD,EAAAA,GAAG,CAACgB,IAAJ,CAAS,iBAAT,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,qBACWD,GAAG,CAACE,IADf;AAAA,QAChCiC,IADgC,cAChCA,IADgC;AAAA,QAC1BC,GAD0B,cAC1BA,GAD0B;AAAA,QACrBC,KADqB,cACrBA,KADqB;AAAA,QACd5B,MADc,cACdA,MADc;AAAA,QACN6B,IADM,cACNA,IADM;AAAA,QACAC,MADA,cACAA,MADA;AAEpCzC,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6BW,SAA7B,CAAuC;AAAEmB,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,GAAG,EAAHA,GAAR;AAAaC,MAAAA,KAAK,EAALA,KAAb;AAAoB5B,MAAAA,MAAM,EAANA,MAApB;AAA4B6B,MAAAA,IAAI,EAAJA,IAA5B;AAAkCC,MAAAA,MAAM,EAANA;AAAlC,KAAvC,EAAmF,UAAC7C,GAAD,EAAMuB,MAAN,EAAiB;AAClG,UAAIvB,GAAJ,EAAS;AACPO,QAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgB/B,IAAhB,CAAqB;AAAEgC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAAV,SAArB;AACD,OAFD,MAEO;AACLnB,QAAAA,GAAG,CAACO,IAAJ,CAAS;AAAE0B,UAAAA,WAAW,EAAEjB,MAAM,CAACK,GAAP,CAAW,CAAX;AAAf,SAAT;AACD;AACF,KAND;AAOL,GATD;AAWAvC,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,yBAAR,EAAmC,UAACvB,GAAD,EAAMC,GAAN,EAAc;AAC/C,QAAIuB,MAAM,GAAG,IAAIlC,iBAAQmC,QAAZ,CAAqBzB,GAAG,CAAC0B,MAAJ,CAAWC,GAAhC,CAAb;AACA7B,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6BuB,SAA7B,CAAuC;AAAC,aAAOJ;AAAR,KAAvC,EAAwD,UAAC9B,GAAD,EAAMa,CAAN,EAAY;AAClEsB,sBAAOC,KAAP,CAAa,IAAb,EAAmBpC,GAAnB;;AACAmC,sBAAOC,KAAP,CAAa,CAAb,EAAgBvB,CAAC,CAACwB,YAAlB,EAFkE,CAGlE;;;AACA9B,MAAAA,GAAG,CAACO,IAAJ,CAAS;AAACuB,QAAAA,YAAY,EAAExB,CAAC,CAACwB;AAAjB,OAAT;AACD,KALD;AAMD,GARD;AAUAhD,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,kBAAR,EAA4B,UAACvB,GAAD,EAAMC,GAAN,EAAc;AACxCH,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6B2B,IAA7B,CAAkC,EAAlC,EAAsCC,OAAtC,CAA8C,UAACvC,GAAD,EAAM8C,WAAN,EAAsB;AAClEvC,MAAAA,GAAG,CAACd,IAAJ,CAAS;AAAEqD,QAAAA,WAAW,EAAXA;AAAF,OAAT;AACD,KAFD;AAGD,GAJD;AAMAzD,EAAAA,GAAG,CAACgB,IAAJ,CAAS,iBAAT,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,qBACRD,GAAG,CAACE,IADI;AAAA,QAChCO,MADgC,cAChCA,MADgC;AAAA,QACxB4B,KADwB,cACxBA,KADwB;AAAA,QACjBC,IADiB,cACjBA,IADiB;AAEpCxC,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6BW,SAA7B,CAAuC;AAAEP,MAAAA,MAAM,EAANA,MAAF;AAAU4B,MAAAA,KAAK,EAALA,KAAV;AAAiBC,MAAAA,IAAI,EAAJA;AAAjB,KAAvC,EAAgE,UAAC5C,GAAD,EAAMuB,MAAN,EAAiB;AAC/E,UAAIvB,GAAJ,EAAS;AACPO,QAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgB/B,IAAhB,CAAqB;AAAEgC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAAV,SAArB;AACD,OAFD,MAEO;AACLnB,QAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEgC,UAAAA,WAAW,EAAEvB,MAAM,CAACK,GAAP,CAAW,CAAX;AAAf,SAAT;AACD;AACF,KAND;AAOL,GATD;AAWAvC,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,yBAAR,EAAmC,UAACvB,GAAD,EAAMC,GAAN,EAAc;AAC/C,QAAIuB,MAAM,GAAG,IAAIlC,iBAAQmC,QAAZ,CAAqBzB,GAAG,CAAC0B,MAAJ,CAAWC,GAAhC,CAAb;AACA7B,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6BuB,SAA7B,CAAuC;AAAC,aAAOJ;AAAR,KAAvC,EAAwD,UAAC9B,GAAD,EAAMa,CAAN,EAAY;AAClEsB,sBAAOC,KAAP,CAAa,IAAb,EAAmBpC,GAAnB;;AACAmC,sBAAOC,KAAP,CAAa,CAAb,EAAgBvB,CAAC,CAACwB,YAAlB,EAFkE,CAGlE;;;AACA9B,MAAAA,GAAG,CAACO,IAAJ,CAAS;AAACuB,QAAAA,YAAY,EAAExB,CAAC,CAACwB;AAAjB,OAAT;AACD,KALD;AAMD,GARD;AAUAhD,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,eAAR,EAAyB,UAACvB,GAAD,EAAMC,GAAN,EAAc;AACrCH,IAAAA,EAAE,CAACO,UAAH,CAAc,UAAd,EAA0B2B,IAA1B,CAA+B,EAA/B,EAAmCC,OAAnC,CAA2C,UAACvC,GAAD,EAAM+C,QAAN,EAAmB;AAC5DxC,MAAAA,GAAG,CAACd,IAAJ,CAAS;AAAEsD,QAAAA,QAAQ,EAARA;AAAF,OAAT;AACD,KAFD;AAGD,GAJD;AAMA1D,EAAAA,GAAG,CAACgB,IAAJ,CAAS,cAAT,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,qBACfD,GAAG,CAACE,IADW;AAAA,QAC7BH,IAD6B,cAC7BA,IAD6B;AAAA,QACvBoC,IADuB,cACvBA,IADuB;AAEjCrC,IAAAA,EAAE,CAACO,UAAH,CAAc,UAAd,EAA0BW,SAA1B,CAAoC;AAAEjB,MAAAA,IAAI,EAAJA,IAAF;AAAQoC,MAAAA,IAAI,EAAJA;AAAR,KAApC,EAAoD,UAACzC,GAAD,EAAMuB,MAAN,EAAiB;AACnE,UAAIvB,GAAJ,EAAS;AACPO,QAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgB/B,IAAhB,CAAqB;AAAEgC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAAV,SAArB;AACD,OAFD,MAEO;AACLnB,QAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEiC,UAAAA,QAAQ,EAAExB,MAAM,CAACK,GAAP,CAAW,CAAX;AAAZ,SAAT;AACD;AACF,KAND;AAOL,GATD;AAWAvC,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,sBAAR,EAAgC,UAACvB,GAAD,EAAMC,GAAN,EAAc;AAC5C,QAAIuB,MAAM,GAAG,IAAIlC,iBAAQmC,QAAZ,CAAqBzB,GAAG,CAAC0B,MAAJ,CAAWC,GAAhC,CAAb;AACA7B,IAAAA,EAAE,CAACO,UAAH,CAAc,UAAd,EAA0BuB,SAA1B,CAAoC;AAAC,aAAOJ;AAAR,KAApC,EAAqD,UAAC9B,GAAD,EAAMa,CAAN,EAAY;AAC/DsB,sBAAOC,KAAP,CAAa,IAAb,EAAmBpC,GAAnB;;AACAmC,sBAAOC,KAAP,CAAa,CAAb,EAAgBvB,CAAC,CAACwB,YAAlB,EAF+D,CAG/D;;;AACA9B,MAAAA,GAAG,CAACO,IAAJ,CAAS;AAACuB,QAAAA,YAAY,EAAExB,CAAC,CAACwB;AAAjB,OAAT;AACD,KALD;AAMD,GARD;AAUAhD,EAAAA,GAAG,CAACgB,IAAJ,CAAS,iBAAT,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,QAChCyC,OADgC,GACpB1C,GAAG,CAACE,IADgB,CAChCwC,OADgC;AAEpC5C,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6BW,SAA7B,CAAuC;AAAE0B,MAAAA,OAAO,EAAPA;AAAF,KAAvC,EAAoD,UAAChD,GAAD,EAAMuB,MAAN,EAAiB;AACnE,UAAIvB,GAAJ,EAAS;AACPO,QAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgB/B,IAAhB,CAAqB;AAAEgC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAAV,SAArB;AACD,OAFD,MAEO;AACLnB,QAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEmC,UAAAA,WAAW,EAAE1B,MAAM,CAACK,GAAP,CAAW,CAAX;AAAf,SAAT;AACD;AACF,KAND;AAOL,GATD;AAWAvC,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,kBAAR,EAA4B,UAACvB,GAAD,EAAMC,GAAN,EAAc;AACxCH,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6B2B,IAA7B,CAAkC,EAAlC,EAAsCC,OAAtC,CAA8C,UAACvC,GAAD,EAAMiD,WAAN,EAAsB;AAClE1C,MAAAA,GAAG,CAACd,IAAJ,CAAS;AAAEwD,QAAAA,WAAW,EAAXA;AAAF,OAAT;AACD,KAFD;AAGD,GAJD;AAMA5D,EAAAA,GAAG,CAACwC,GAAJ,CAAQ,yBAAR,EAAmC,UAACvB,GAAD,EAAMC,GAAN,EAAc;AAC/C,QAAIuB,MAAM,GAAG,IAAIlC,iBAAQmC,QAAZ,CAAqBzB,GAAG,CAAC0B,MAAJ,CAAWC,GAAhC,CAAb;AACA7B,IAAAA,EAAE,CAACO,UAAH,CAAc,aAAd,EAA6BuB,SAA7B,CAAuC;AAAC,aAAOJ;AAAR,KAAvC,EAAwD,UAAC9B,GAAD,EAAMa,CAAN,EAAY;AAClEsB,sBAAOC,KAAP,CAAa,IAAb,EAAmBpC,GAAnB;;AACAmC,sBAAOC,KAAP,CAAa,CAAb,EAAgBvB,CAAC,CAACwB,YAAlB,EAFkE,CAGlE;;;AACA9B,MAAAA,GAAG,CAACO,IAAJ,CAAS;AAACuB,QAAAA,YAAY,EAAExB,CAAC,CAACwB;AAAjB,OAAT;AACD,KALD;AAMD,GARD;AAUAhD,EAAAA,GAAG,CAAC6D,MAAJ,CAAW,IAAX,EAAiB;AAAA,WAAMhD,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAN;AAAA,GAAjB;AAED,CAnKD",
      "sourceRoot": "D:\\fontend\\xin-art-backend",
      "sourcesContent": [
        "import express from 'express';\r\nimport mongodb from 'mongodb';\r\nimport bodyParser from 'body-parser';\r\nimport assert from 'assert';\r\n\r\nconst app = express();\r\nconst dbUrl = \"mongodb://localhost\";\r\n\r\n//解析application/json\r\napp.use(bodyParser.json());\r\n\r\n//解析 application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n\r\nmongodb.MongoClient.connect(dbUrl,{ useNewUrlParser: true }, (err, client) => {\r\n  if (err) throw err;\r\n  console.log(\"Connected successfully to server\");\r\n  const db = client.db('xinart');\r\n\r\n  //api左边的右划线不要忘记！！！\r\n  app.post('/api/login', (req, res) => {\r\n    const {username, password} = req.body;\r\n    db.collection('account').countDocuments({username, password}, (err, r) => {\r\n      if (r === 1) {\r\n        res.send(\"ok\")\r\n      }else {\r\n        res.send(\"Your username or password is wrong\")\r\n      }\r\n    })\r\n  }) \r\n\r\n  app.post('/api/addAlbum', (req, res) => {\r\n    const { imgurl, song, album, singer, lyricist, composer, release } = req.body;\r\n        db.collection('albumList').insertOne({ imgurl, song, album, singer, lyricist, composer, release }, (err, result) => {\r\n          if (err) {\r\n            res.status(500).json({ errors: { global: \"Something went wrong\" } });\r\n          } else {\r\n            res.send({ albumList: result.ops[0] });\r\n          }\r\n        });\r\n  })\r\n\r\n  app.get('/api/deleteAlbum/:_id', (req, res) => {\r\n    var obj_id = new mongodb.ObjectID(req.params._id);\r\n    db.collection('albumList').deleteOne({\"_id\": obj_id}, (err, r) => {\r\n      assert.equal(null, err);\r\n      assert.equal(1, r.deletedCount);\r\n      //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\r\n      res.send({deletedCount: r.deletedCount})\r\n    })\r\n  })\r\n\r\n  app.get('/api/albumList', (req, res) => {\r\n    db.collection('albumList').find({}).toArray((err, albumList) => {\r\n      res.json({ albumList });\r\n    })\r\n  });\r\n\r\n  app.get('/api/articleList', (req, res) => {\r\n    db.collection('articleList').find({}).toArray((err, articleList) => {\r\n      res.json({ articleList });\r\n    })\r\n  });\r\n\r\n  app.get('/work/detail/:_id', (req, res) => {\r\n    // key _id 对应的 value 值比较特殊，他是一个对象而不是字符串\r\n    //所以这里我们需要新建一个对象\r\n    var obj_id = new mongodb.ObjectID(req.params._id);\r\n    db.collection('articleList').find({\"_id\": obj_id}).toArray((err, articleList) => {\r\n      res.json({ articleList });\r\n    })\r\n  })\r\n\r\n  app.post('/api/addArticle', (req, res) => {\r\n    const { time, tag, title, imgurl, desc, detail } = req.body;\r\n        db.collection('articleList').insertOne({ time, tag, title, imgurl, desc, detail }, (err, result) => {\r\n          if (err) {\r\n            res.status(500).json({ errors: { global: \"Something went wrong\" } });\r\n          } else {\r\n            res.send({ articleList: result.ops[0] });\r\n          }\r\n        });\r\n  })\r\n\r\n  app.get('/api/deleteArticle/:_id', (req, res) => {\r\n    var obj_id = new mongodb.ObjectID(req.params._id);\r\n    db.collection('articleList').deleteOne({\"_id\": obj_id}, (err, r) => {\r\n      assert.equal(null, err);\r\n      assert.equal(1, r.deletedCount);\r\n      //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\r\n      res.send({deletedCount: r.deletedCount})\r\n    })\r\n  })\r\n\r\n  app.get('/api/drawingList', (req, res) => {\r\n    db.collection('drawingList').find({}).toArray((err, drawingList) => {\r\n      res.json({ drawingList });\r\n    })\r\n  });\r\n\r\n  app.post('/api/addDrawing', (req, res) => {\r\n    const { imgurl, title, desc } = req.body;\r\n        db.collection('drawingList').insertOne({ imgurl, title, desc }, (err, result) => {\r\n          if (err) {\r\n            res.status(500).json({ errors: { global: \"Something went wrong\" } });\r\n          } else {\r\n            res.send({ drawingList: result.ops[0] });\r\n          }\r\n        });\r\n  })\r\n\r\n  app.get('/api/deleteDrawing/:_id', (req, res) => {\r\n    var obj_id = new mongodb.ObjectID(req.params._id);\r\n    db.collection('drawingList').deleteOne({\"_id\": obj_id}, (err, r) => {\r\n      assert.equal(null, err);\r\n      assert.equal(1, r.deletedCount);\r\n      //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\r\n      res.send({deletedCount: r.deletedCount})\r\n    })\r\n  })\r\n\r\n  app.get('/api/postList', (req, res) => {\r\n    db.collection('postList').find({}).toArray((err, postList) => {\r\n      res.json({ postList });\r\n    })\r\n  })\r\n\r\n  app.post('/api/addPost', (req, res) => {\r\n    const { post, time} = req.body;\r\n        db.collection('postList').insertOne({ post, time }, (err, result) => {\r\n          if (err) {\r\n            res.status(500).json({ errors: { global: \"Something went wrong\" } });\r\n          } else {\r\n            res.send({ postList: result.ops[0] });\r\n          }\r\n        });\r\n  })\r\n\r\n  app.get('/api/deletePost/:_id', (req, res) => {\r\n    var obj_id = new mongodb.ObjectID(req.params._id);\r\n    db.collection('postList').deleteOne({\"_id\": obj_id}, (err, r) => {\r\n      assert.equal(null, err);\r\n      assert.equal(1, r.deletedCount);\r\n      //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\r\n      res.send({deletedCount: r.deletedCount})\r\n    })\r\n  })\r\n\r\n  app.post('/api/addAboutMe', (req, res) => {\r\n    const { aboutMe } = req.body;\r\n        db.collection('aboutMeList').insertOne({ aboutMe }, (err, result) => {\r\n          if (err) {\r\n            res.status(500).json({ errors: { global: \"Something went wrong\" } });\r\n          } else {\r\n            res.send({ aboutMeList: result.ops[0] });\r\n          }\r\n        });\r\n  })\r\n\r\n  app.get('/api/aboutMeList', (req, res) => {\r\n    db.collection('aboutMeList').find({}).toArray((err, aboutMeList) => {\r\n      res.json({ aboutMeList });\r\n    })\r\n  })\r\n\r\n  app.get('/api/deleteAboutMe/:_id', (req, res) => {\r\n    var obj_id = new mongodb.ObjectID(req.params._id);\r\n    db.collection('aboutMeList').deleteOne({\"_id\": obj_id}, (err, r) => {\r\n      assert.equal(null, err);\r\n      assert.equal(1, r.deletedCount);\r\n      //发送一个res回去，以便前端收到res以后执行then()函数 Axios.get().then()\r\n      res.send({deletedCount: r.deletedCount})\r\n    })\r\n  })\r\n\r\n  app.listen(8080, () => console.log('Server is running on localhost:8080'));\r\n\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1550110811132
  }
}